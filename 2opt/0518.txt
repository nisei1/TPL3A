・都市数がNだった場合、必要なニューロンの数はNになる
・相互結合型のネットワークを作成する
・あるニューロンが発火したら、それに関係する地点を操作する
・タブーリスト：使ってはいけないものリスト、リストサイズを問題に応じて適切に決めなければならない
・スケーリングパラメータ：値の範囲を調節する
・2optを関数化する
・(3)式をforで回す
・(4)式をforで回す

ｘ：ニューロンの出力
ｆ()：シグモイド関数
ε：外部からの入力の式
η：相互結合、ある点が発火すると他の点は発火しずらくなる
ζ：タブー状態
α：タブー状態のパラメータ
θ：閾値
ｗ:相互結合するときの重み

(3)式：
・iは指定したニューロン⇒実行できる点
・jは試行回数？
・Δijはどれだけコストが削減されたか
手順
・Δijを計算する⇒一度2optを実行し、繋ぎ変えた前後のコストの差を出力する
・その中で最大値を出力する

(4)式：
・1個のニューロンが発火すると、それ以外のニューロンが発火しづらくなる

(5)式：
・ｋｒを0.99とすると、ｋｒをｄ乗する⇒値が小さくなっていく（0に近づく）
・ｘは過去の出力（発火しているかどうかの履歴）を表す
・古い履歴ほど値が小さくなっていく⇒特定の地点ばかりが交換されないようにする

(7)式：
・繋ぎ変えた地点が再び選ばれて、繋ぎ変えられてしまう「サイクリング」を防ぐ
