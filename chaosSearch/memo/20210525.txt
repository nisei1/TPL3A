・都市数がNだった場合、必要なニューロンの数はNになる
・相互結合型のネットワークを作成する
・あるニューロンが発火したら、それに関係する地点を操作する
・タブーリスト：使ってはいけないものリスト、リストサイズを問題に応じて適切に決めなければならない
・スケーリングパラメータ：値の範囲を調節する
・2optを関数化する
・(3)式をforで回す
・(4)式をforで回す

ｘ：時刻tにおけるニューロンiの出力。
ｆ()：シグモイド関数
ξ Zai：外部からの入力の式   時刻tにおけるニューロンiのゲイン効果の内部状態。
η eta：相互結合、ある点が発火すると他の点は発火しずらくなる 時刻tにおけるニューロンiのフィードバック効果の内部状態。
ζ zeta：タブー状態   時刻tにおけるニューロンiのタブー効果の内部状態。
Kr:ゲイン効果の減衰パラメーター。
α alpha：タブー状態のパラメータ   タブ効果のスケーリングパラメータ。
β beta:ゲイン効果のスケーリング・パラメーター。
Δij delta:都市iとjを結ぶ2-opt交換が提供する目的関数値の利得。
θ theta, R：閾値  正のバイアス
ｗ:相互結合するときの重み

(3)式：
・iは指定したニューロン⇒実行できる点
・jは試行回数？
・Δijはどれだけコストが削減されたか
i と交換可能なすべての都市がｊ残りをすべて試す　１０都市なら数個　工科が高い奴が max
tのfor の中の　i のfor がある
i並列
手順
・Δijを計算する⇒一度2optを実行し、繋ぎ変えた前後のコストの差を出力する
・その中で最大値を出力する

(4)式：
・1個のニューロンが発火する（閾値を超える）と、それ以外のニューロンが発火しづらく（閾値を超えずらく）なる
・ニューロンの出力Xに、ｗ（相互結合するときの重み）を足す。それを1~nまでの都市で計算し、合計をする。
手順
for 

(5)式：
・ｋｒを0.99とすると、ｋｒをｄ乗する⇒値が小さくなっていく（0に近づく）
・ｘは過去の出力（発火しているかどうかの履歴）を表す
・古い履歴ほど値が小さくなっていく⇒特定の地点ばかりが交換されないようにする

Ｋｒ＝０．９９のｄ乗
手順

(7)式：
・繋ぎ変えた地点が再び選ばれて、繋ぎ変えられてしまう「サイクリング」を防ぐ
手順

自分が理解していない点
・tって何？ 繰り返し回数？  時刻　回数　初期値は乱数（０～１）でも０でも　全部の式で一通り更新し終えたらｔに１を足す　ｔ　と i は別のパラメータ
・（３）式の手順は理解できたがそのほかの式の手順がわかっていない。
・各式のつながりが分からない。
・α、β、Θ、ニューロンの閾値、重みWを自分たちで決めるものなのか？



xi が発火したらmax で決まった都市ijを適用(2opt)

適用したら次の時刻tの巡回路の基準となる

6式まで出ればよい
　

S = tabu list size

tabu list ここに書かれている都市のペアの２おｐｔをやってはいけない。
    ぺあでtabu list を追加

タブーリストはどう増えていく？
    xiニューロンが発火したとき　xi が発火したかしてないか　のリスト　
        間接的にxiが発火したときのmaxの都市を参照（１－４など）

１次元配列の方が早い
科学計算では２次元配列は使わない

時刻tの時 (時刻tの時のそれぞれの初期値)
    ξ,η,ζの初期値を0~1のランダムに設定
    xはこいつらを足してシグモイド関数に入れた結果を格納