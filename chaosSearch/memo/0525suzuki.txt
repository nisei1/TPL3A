xiはカオスニューロンの出力。
t：時刻（繰り返し回数、初期値にζ、0でも良い、０～１の乱数でも良い）
t=0が分かればt=1が分かる。。。というように次の値が分かる
N都市分のニューロンの値を一通り更新し終えたなら1回分が終了
tに関してforになり、ニューロンの番号iに関してもforになる
tとiは別のパラメータ
(3)式について：Δijは切る始点と終点、iにたいしてjは交換する枝の候補
1番目のニューロンからどこかに行っている枝から、残りの繋げられる枝
その中の最大値
iが増えるタイミング：本来はニューロンがすべて同時刻に動いている（並列）。
しかし、それはできないので、時刻tの時のiの処理というように処理していく。
forは2重や3重になる。
仮の2opt法の地点交換を行っているだけで、地点交換する前と後2つの配列があり、前後の配列の削減されたコストを出すものなので、
地点交換前の配列を保持し続ける。
xtが発火したら採用する、発火したら覚えておいた巡回路を実際の巡回路に適応し、適応した巡回路で
再び仮の地点交換を行う。

パラメータはp.780に記載されているもの。
(6)式はまとめなので最後に求められる式
(7)は(5)式と同じ

(5)式で気を付けることはｋｒの累乗で今回はｋｒ＝099のｄ乗
変形はtとsによって行う。sはタブーリストのサイズ。tとsを比較して、満たさない時は時刻に対してサイズが短い。
タブーリストに入っている都市間の交換は行ってはいけない。例えば5と10が入っていればこの間の交換を行わない。
タブーの掛け方にも種類がある。(3)で一番良かったものが(5)に入ってくる。FIFOがシンプルなタブーリストだが、今回はｋｒがかるため、
指数関数的減衰が行われるため、古い情報であるほどタブーの度合いが下がる。内部状態に対して行うので今回のものは厳密なタブーではないが、効率的な交換が行える。
ニューロンiがtに対の時に発火しているかどうかをタブーリストに入れている、間接的に発火した時の都市間が入っている。
シグモイド関数

化学計算のときは1次元配列でコードを書く。2次元配列は使わない。
お手製のヘッダファイルを作ると良い。一般化して書かなければいけない。実行速度はあまり変わらない。

